name: Build
on:
  push:
    branches:
      - master
  pull_request: {}

jobs:
  linux-cabal:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        ghc: ['8.8', '8.10']
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      name: Cache ~/.cabal/packages
      with:
        path: ~/.cabal/packages
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-packages
    - uses: actions/cache@v1
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-store
    - uses: actions/cache@v1
      name: Cache dist-newstyle
      with:
        path: dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-dist-newstyle
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.0'
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Update cabal package database
      run: cabal update
    - name: Build
      run: |
        cabal build all
    - name: Test
      run: |
        cd opentelemetry
        cabal install tasty-discover
        env PATH="$HOME/.cabal/bin:$PATH" cabal test

  linux-stack:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack-yaml: ['stack.yaml', 'stack-8.10.1.yaml']
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.stack-yaml }}-stack-home
    - uses: actions/cache@v1
      name: Cache .stack-work
      with:
        path: .stack-work
        key: ${{ runner.os }}-${{ matrix.stack-yaml }}-stack-work
    - name: Install stack
      run: which stack || curl -sSL https://get.haskellstack.org/ | sh
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Install GHC
      run: |
        stack setup --stack-yaml ${{ matrix.stack-yaml }}
    - name: Build
      run: |
        stack build --no-interleaved-output --fast --stack-yaml ${{ matrix.stack-yaml }}
    - name: Test
      run: |
        stack test --fast --stack-yaml ${{ matrix.stack-yaml }}
    - name: Bench
      run: |
        stack bench opentelemetry-extra --benchmark-arguments '+RTS -l'

  macos-stack:
    runs-on: macOS-latest
    strategy:
      matrix:
        stack-yaml: ['stack.yaml', 'stack-8.10.1.yaml']
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.stack-yaml }}-stack-home
    - uses: actions/cache@v1
      name: Cache .stack-work
      with:
        path: .stack-work
        key: ${{ runner.os }}-${{ matrix.stack-yaml }}-stack-work
    - name: Install protobuf compiler
      run: |
        brew install protobuf
    - name: Install stack
      run: which stack || curl -sSL https://get.haskellstack.org/ | sh
    - name: Install GHC
      run: |
        stack setup --stack-yaml ${{ matrix.stack-yaml }}
    - name: Build
      run: |
        stack build --no-interleaved-output  --fast --stack-yaml ${{ matrix.stack-yaml }}
    - name: Test
      run: |
        stack test --fast --stack-yaml ${{ matrix.stack-yaml }}
    - name: Bench
      run: |
        stack bench opentelemetry-extra --benchmark-arguments '+RTS -l'

  linux-nix-stack:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.1
    - uses: cachix/install-nix-action@v10
      with:
        skip_adding_nixpkgs_channel: true
    - uses: cachix/cachix-action@v6
      with:
        name: mycache
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - run: cachix use iohk
    - run: cachix use opentelemetry-haskell
    - run: nix-build -A mypackage.components.all
